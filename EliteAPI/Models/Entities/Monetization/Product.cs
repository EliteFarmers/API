using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace EliteAPI.Models.Entities.Monetization;

public enum ProductType {
	/// <summary>
	/// One-time purchase.
	/// </summary>
	Durable = 2,
	Consumable = 3,
	Subscription = 5,
	/// <summary>
	/// Generated by Discord, ignore these.
	/// </summary>
	SubscriptionGroup = 6
}

public enum ProductCategory {
	None = 0,
	Misc = 1,
	/// <summary>
	/// Background image for the bot.
	/// </summary>
	WeightImage = 2,
}

public class Product {
	[Key]
	public ulong Id { get; set; }
	
	public ProductType Type { get; set; }
	public ProductCategory Category { get; set; } = ProductCategory.None;

	[MaxLength(100)]
	public required string Name { get; set; }
	[MaxLength(1024)]
	public string? Description { get; set; }
	[MaxLength(256)]
	public string? Icon { get; set; }
	[MaxLength(128)]
	public required string Slug { get; set; }
	
	public ulong Flags { get; set; }
	
	/*
	AVAILABLE	1 << 2	SKU is available for purchase
	GUILD_SUBSCRIPTION	1 << 7	Recurring SKU that can be purchased by a user and applied to a single server. Grants access to every user in that server.
	USER_SUBSCRIPTION	1 << 8	Recurring SKU purchased by a user for themselves. Grants access to the purchasing user in every server.
	*/
	public bool IsAvailable => (Flags & 1 << 2) != 0;
	public bool IsGuildSubscription => (Flags & 1 << 7) != 0;
	public bool IsUserSubscription => (Flags & 1 << 8) != 0;
	
	[Column(TypeName = "jsonb")]
	public UnlockedProductFeatures Features { get; set; } = new();
}

public class UnlockedProductFeatures {
	/// <summary>
	/// ID of unlocked badge.
	/// </summary>
	public int? BadgeId { get; set; }
	/// <summary>
	/// Name of weight styles to unlock.
	/// </summary>
	public List<string>? WeightStyles { get; set; }
	/// <summary>
	/// Ability to override other's weight styles.
	/// </summary>
	public bool WeightStyleOverride { get; set; }
	/// <summary>
	/// Embed colors for bot commands.
	/// </summary>
	public List<string>? EmbedColors { get; set; }
	/// <summary>
	/// Ability to hide shop promotions.
	/// </summary>
	public bool HideShopPromotions { get; set; }
	/// <summary>
	/// Show "More Info" on weight command by default.
	/// </summary>
	public bool MoreInfoDefault { get; set; }
	/// <summary>
	/// Maximum number of events that can be created in a month. (For guilds)
	/// </summary>
	public int? MaxMonthlyEvents { get; set; }
	/// <summary>
	/// Maximum number of jacob leaderboard that can be active at once. (For guilds)
	/// </summary>
	public int? MaxJacobLeaderboards { get; set; }
}